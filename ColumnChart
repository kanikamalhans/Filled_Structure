/* App.js */
import React, { Component } from 'react';
import CanvasJSReact from '@canvasjs/react-charts';
// var CanvasJSReact = require('@canvasjs/react-charts');

var CanvasJS = CanvasJSReact.CanvasJS;
var CanvasJSChart = CanvasJSReact.CanvasJSChart;

class App extends Component {
  constructor() {
    super();
    this.state = {
      year: '2024' // Initial year filter
    };
  }

  handleYearChange = (event) => {
    this.setState({ year: event.target.value });
  };

  render() {
    const options = {
      title: {
        text: "Advisor vs Product",
        fontFamily: "Wells Fargo Sans",
        fontSize: 24,
        fontWeight: "normal"
      },
      axisX: {
        title: "Financial Products",
        labelFontFamily: "Wells Fargo Sans",
        labelAngle: -45 // Rotate labels if they are too long
      },
      axisY: {
        title: "Value",
        labelFontFamily: "Wells Fargo Sans"
      },
      data: [
        {
          type: "column",
          dataPoints: [
            { label: "Hedge Funds", y: 35 },
            { label: "Mutual Funds", y: 28 },
            { label: "Stocks", y: 44 },
            { label: "Bonds", y: 30 },
            { label: "ETFs", y: 26 },
            { label: "REITs", y: 22 },
            { label: "Commodities", y: 18 },
            { label: "Options", y: 15 },
            { label: "Futures", y: 10 },
            { label: "Private Equity", y: 12 },
            { label: "Venture Capital", y: 14 },
            { label: "Cryptocurrencies", y: 8 },
            { label: "Annuities", y: 6 },
            { label: "Insurance", y: 20 },
            { label: "Treasury Bills", y: 5 }
          ],
          // Custom properties to adjust the bar thickness and spacing
          barThickness: 4, // Makes the bars 4mm thick
          spacing: 2, // Reduces the gap between bars to 2mm
        }
      ],
      fontFamily: "Wells Fargo Sans"
    };

    return (
      <div>
        <div>
          <label htmlFor="yearFilter">Select Year: </label>
          <select id="yearFilter" value={this.state.year} onChange={this.handleYearChange}>
            <option value="2023">2023</option>
            <option value="2024">2024</option>
            <option value="2025">2025</option>
          </select>
        </div>
        <CanvasJSChart options={options}
          /* onRef={ref => this.chart = ref} */
        />
        {/* You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods */}
      </div>
    );
  }
}

export default App;
