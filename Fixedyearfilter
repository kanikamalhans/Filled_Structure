import React, { useState } from 'react';
import { Bar } from 'react-chartjs-2';
import { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';
import 'chart.js/auto';
import Popup from '../Popup'; // Import the Popup component

// Register the required components
ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);

const AdvisorProductsChart = () => {
  const [popupData, setPopupData] = useState(null); // State to manage popup data
  const [selectedYear, setSelectedYear] = useState('2024'); // State to manage the selected year

  // Mock data for demonstration
  const data = {
    labels: ['Product Category 1', 'Product Category 2', 'Product Category 3'],
    datasets: [
      {
        label: 'Number of Advisors',
        data: [10, 15, 8], // Mock data
        backgroundColor: [
          'rgba(255, 99, 132, 0.6)',
          'rgba(54, 162, 235, 0.6)',
          'rgba(255, 206, 86, 0.6)',
        ],
        borderColor: [
          'rgba(255, 99, 132, 1)',
          'rgba(54, 162, 235, 1)',
          'rgba(255, 206, 86, 1)',
        ],
        borderWidth: 1,
      },
    ],
  };

  const options = {
    plugins: {
      tooltip: {
        enabled: false, // Disable tooltip
      },
    },
    onClick: (_, elements) => {
      if (elements && elements.length > 0) {
        const clickedIndex = elements[0].index;
        const productLabel = data.labels[clickedIndex];
        // Mock data for subproducts
        const subproductData = {
          labels: ['Subproduct 1', 'Subproduct 2', 'Subproduct 3'],
          datasets: [
            {
              label: `Subproducts for ${productLabel}`,
              data: [20, 30, 15], // Mock data
              backgroundColor: [
                'rgba(75, 192, 192, 0.6)',
                'rgba(153, 102, 255, 0.6)',
                'rgba(255, 159, 64, 0.6)',
              ],
              borderColor: [
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)',
              ],
              borderWidth: 1,
            },
          ],
        };
        setPopupData(subproductData); // Set popup data state
      }
    },
  };

  // Handle year change
  const handleYearChange = (event) => {
    setSelectedYear(event.target.value);
    // You can add logic here to update the data based on the selected year
  };

  return (
    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>
      <h2>Advisor vs. Product Categories</h2>
      
      {/* Year Filter Dropdown */}
      <div style={{ marginBottom: '20px' }}>
        <label htmlFor="year-filter" style={{ marginRight: '10px' }}>Select Year:</label>
        <select id="year-filter" value={selectedYear} onChange={handleYearChange}>
          <option value="2024">2024</option>
          <option value="2023">2023</option>
          <option value="2022">2022</option>
          <option value="2021">2021</option>
          {/* Add more years as needed */}
        </select>
      </div>

      {/* Bar Chart */}
      <Bar data={data} options={options} />
      
      {/* Popup */}
      {popupData && <Popup data={popupData} onClose={() => setPopupData(null)} />}
    </div>
  );
};

export default AdvisorProductsChart;
